
final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000638  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000092  00800060  00000638  000006cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  008000f2  008000f2  0000075e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000790  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017cf  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c0  00000000  00000000  000020db  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cda  00000000  00000000  0000289b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  00003578  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000571  00000000  00000000  00003840  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a2c  00000000  00000000  00003db1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  000047dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e3       	ldi	r30, 0x38	; 56
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3f       	cpi	r26, 0xF2	; 242
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 ef       	ldi	r26, 0xF2	; 242
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 3f       	cpi	r26, 0xFC	; 252
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <main>
  8a:	0c 94 1a 03 	jmp	0x634	; 0x634 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Request>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  92:	a2 9a       	sbi	0x14, 2	; 20
  94:	aa 98       	cbi	0x15, 2	; 21
  96:	2f ef       	ldi	r18, 0xFF	; 255
  98:	89 ef       	ldi	r24, 0xF9	; 249
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	80 40       	sbci	r24, 0x00	; 0
  a0:	90 40       	sbci	r25, 0x00	; 0
  a2:	e1 f7       	brne	.-8      	; 0x9c <Request+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <Request+0x14>
  a6:	00 00       	nop
  a8:	aa 9a       	sbi	0x15, 2	; 21
  aa:	08 95       	ret

000000ac <Response>:
  ac:	a2 98       	cbi	0x14, 2	; 20
  ae:	9a 99       	sbic	0x13, 2	; 19
  b0:	fe cf       	rjmp	.-4      	; 0xae <Response+0x2>
  b2:	9a 9b       	sbis	0x13, 2	; 19
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <Response+0x6>
  b6:	9a 99       	sbic	0x13, 2	; 19
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <Response+0xa>
  ba:	08 95       	ret

000000bc <Receive_data>:
  bc:	88 e0       	ldi	r24, 0x08	; 8
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	9a 9b       	sbis	0x13, 2	; 19
  c2:	fe cf       	rjmp	.-4      	; 0xc0 <Receive_data+0x4>
  c4:	20 ea       	ldi	r18, 0xA0	; 160
  c6:	2a 95       	dec	r18
  c8:	f1 f7       	brne	.-4      	; 0xc6 <Receive_data+0xa>
  ca:	9a 9b       	sbis	0x13, 2	; 19
  cc:	07 c0       	rjmp	.+14     	; 0xdc <Receive_data+0x20>
  ce:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__data_end>
  d2:	22 0f       	add	r18, r18
  d4:	21 60       	ori	r18, 0x01	; 1
  d6:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__data_end>
  da:	05 c0       	rjmp	.+10     	; 0xe6 <Receive_data+0x2a>
  dc:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__data_end>
  e0:	22 0f       	add	r18, r18
  e2:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__data_end>
  e6:	9a 99       	sbic	0x13, 2	; 19
  e8:	fe cf       	rjmp	.-4      	; 0xe6 <Receive_data+0x2a>
  ea:	01 97       	sbiw	r24, 0x01	; 1
  ec:	49 f7       	brne	.-46     	; 0xc0 <Receive_data+0x4>
  ee:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__data_end>
  f2:	08 95       	ret

000000f4 <Temp>:
  f4:	0e 94 49 00 	call	0x92	; 0x92 <Request>
  f8:	0e 94 56 00 	call	0xac	; 0xac <Response>
  fc:	0e 94 5e 00 	call	0xbc	; 0xbc <Receive_data>
 100:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <I_RH>
 104:	0e 94 5e 00 	call	0xbc	; 0xbc <Receive_data>
 108:	80 93 f3 00 	sts	0x00F3, r24	; 0x8000f3 <D_RH>
 10c:	0e 94 5e 00 	call	0xbc	; 0xbc <Receive_data>
 110:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <I_Temp>
 114:	0e 94 5e 00 	call	0xbc	; 0xbc <Receive_data>
 118:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <D_Temp>
 11c:	0e 94 5e 00 	call	0xbc	; 0xbc <Receive_data>
 120:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <CheckSum>
 124:	40 91 f9 00 	lds	r20, 0x00F9	; 0x8000f9 <I_Temp>
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	90 91 fa 00 	lds	r25, 0x00FA	; 0x8000fa <I_RH>
 12e:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <D_RH>
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	29 0f       	add	r18, r25
 136:	31 1d       	adc	r19, r1
 138:	24 0f       	add	r18, r20
 13a:	35 1f       	adc	r19, r21
 13c:	90 91 fb 00 	lds	r25, 0x00FB	; 0x8000fb <D_Temp>
 140:	29 0f       	add	r18, r25
 142:	31 1d       	adc	r19, r1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	28 17       	cp	r18, r24
 148:	39 07       	cpc	r19, r25
 14a:	11 f0       	breq	.+4      	; 0x150 <Temp+0x5c>
 14c:	4f ef       	ldi	r20, 0xFF	; 255
 14e:	5f ef       	ldi	r21, 0xFF	; 255
 150:	ca 01       	movw	r24, r20
 152:	08 95       	ret

00000154 <ADC_Init_left>:
 154:	8e ef       	ldi	r24, 0xFE	; 254
 156:	8a bb       	out	0x1a, r24	; 26
 158:	87 e8       	ldi	r24, 0x87	; 135
 15a:	86 b9       	out	0x06, r24	; 6
 15c:	08 95       	ret

0000015e <ADC_Read_left>:
 15e:	80 e4       	ldi	r24, 0x40	; 64
 160:	87 b9       	out	0x07, r24	; 7
 162:	36 9a       	sbi	0x06, 6	; 6
 164:	34 9b       	sbis	0x06, 4	; 6
 166:	fe cf       	rjmp	.-4      	; 0x164 <ADC_Read_left+0x6>
 168:	34 9a       	sbi	0x06, 4	; 6
 16a:	84 b1       	in	r24, 0x04	; 4
 16c:	95 b1       	in	r25, 0x05	; 5
 16e:	08 95       	ret

00000170 <light_value_left>:
 170:	0e 94 aa 00 	call	0x154	; 0x154 <ADC_Init_left>
 174:	0e 94 af 00 	call	0x15e	; 0x15e <ADC_Read_left>
 178:	2f ef       	ldi	r18, 0xFF	; 255
 17a:	89 e6       	ldi	r24, 0x69	; 105
 17c:	98 e1       	ldi	r25, 0x18	; 24
 17e:	21 50       	subi	r18, 0x01	; 1
 180:	80 40       	sbci	r24, 0x00	; 0
 182:	90 40       	sbci	r25, 0x00	; 0
 184:	e1 f7       	brne	.-8      	; 0x17e <light_value_left+0xe>
 186:	00 c0       	rjmp	.+0      	; 0x188 <light_value_left+0x18>
 188:	00 00       	nop
 18a:	f4 cf       	rjmp	.-24     	; 0x174 <light_value_left+0x4>

0000018c <i2c_init>:
 18c:	82 e6       	ldi	r24, 0x62	; 98
 18e:	80 b9       	out	0x00, r24	; 0
 190:	84 e0       	ldi	r24, 0x04	; 4
 192:	86 bf       	out	0x36, r24	; 54
 194:	11 b8       	out	0x01, r1	; 1
 196:	08 95       	ret

00000198 <i2c_start>:
 198:	84 ea       	ldi	r24, 0xA4	; 164
 19a:	86 bf       	out	0x36, r24	; 54
 19c:	06 b6       	in	r0, 0x36	; 54
 19e:	07 fe       	sbrs	r0, 7
 1a0:	fd cf       	rjmp	.-6      	; 0x19c <i2c_start+0x4>
 1a2:	08 95       	ret

000001a4 <i2c_write>:
 1a4:	83 b9       	out	0x03, r24	; 3
 1a6:	84 e8       	ldi	r24, 0x84	; 132
 1a8:	86 bf       	out	0x36, r24	; 54
 1aa:	06 b6       	in	r0, 0x36	; 54
 1ac:	07 fe       	sbrs	r0, 7
 1ae:	fd cf       	rjmp	.-6      	; 0x1aa <i2c_write+0x6>
 1b0:	08 95       	ret

000001b2 <delay>:
 1b2:	99 23       	and	r25, r25
 1b4:	54 f4       	brge	.+20     	; 0x1ca <delay+0x18>
 1b6:	08 95       	ret
 1b8:	21 50       	subi	r18, 0x01	; 1
 1ba:	31 09       	sbc	r19, r1
 1bc:	e9 f7       	brne	.-6      	; 0x1b8 <delay+0x6>
 1be:	4f 5f       	subi	r20, 0xFF	; 255
 1c0:	5f 4f       	sbci	r21, 0xFF	; 255
 1c2:	84 17       	cp	r24, r20
 1c4:	95 07       	cpc	r25, r21
 1c6:	1c f4       	brge	.+6      	; 0x1ce <delay+0x1c>
 1c8:	08 95       	ret
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	29 e7       	ldi	r18, 0x79	; 121
 1d0:	30 e0       	ldi	r19, 0x00	; 0
 1d2:	f2 cf       	rjmp	.-28     	; 0x1b8 <delay+0x6>

000001d4 <toggle>:
 1d4:	19 9a       	sbi	0x03, 1	; 3
 1d6:	84 e8       	ldi	r24, 0x84	; 132
 1d8:	86 bf       	out	0x36, r24	; 54
 1da:	06 b6       	in	r0, 0x36	; 54
 1dc:	07 fe       	sbrs	r0, 7
 1de:	fd cf       	rjmp	.-6      	; 0x1da <toggle+0x6>
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <delay>
 1e8:	19 98       	cbi	0x03, 1	; 3
 1ea:	84 e8       	ldi	r24, 0x84	; 132
 1ec:	86 bf       	out	0x36, r24	; 54
 1ee:	06 b6       	in	r0, 0x36	; 54
 1f0:	07 fe       	sbrs	r0, 7
 1f2:	fd cf       	rjmp	.-6      	; 0x1ee <toggle+0x1a>
 1f4:	08 95       	ret

000001f6 <lcd_cmd_hf>:
 1f6:	18 98       	cbi	0x03, 0	; 3
 1f8:	94 e8       	ldi	r25, 0x84	; 132
 1fa:	96 bf       	out	0x36, r25	; 54
 1fc:	06 b6       	in	r0, 0x36	; 54
 1fe:	07 fe       	sbrs	r0, 7
 200:	fd cf       	rjmp	.-6      	; 0x1fc <lcd_cmd_hf+0x6>
 202:	93 b1       	in	r25, 0x03	; 3
 204:	9f 70       	andi	r25, 0x0F	; 15
 206:	93 b9       	out	0x03, r25	; 3
 208:	94 e8       	ldi	r25, 0x84	; 132
 20a:	96 bf       	out	0x36, r25	; 54
 20c:	06 b6       	in	r0, 0x36	; 54
 20e:	07 fe       	sbrs	r0, 7
 210:	fd cf       	rjmp	.-6      	; 0x20c <lcd_cmd_hf+0x16>
 212:	93 b1       	in	r25, 0x03	; 3
 214:	80 7f       	andi	r24, 0xF0	; 240
 216:	89 2b       	or	r24, r25
 218:	83 b9       	out	0x03, r24	; 3
 21a:	84 e8       	ldi	r24, 0x84	; 132
 21c:	86 bf       	out	0x36, r24	; 54
 21e:	06 b6       	in	r0, 0x36	; 54
 220:	07 fe       	sbrs	r0, 7
 222:	fd cf       	rjmp	.-6      	; 0x21e <lcd_cmd_hf+0x28>
 224:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <toggle>
 228:	08 95       	ret

0000022a <lcd_cmd>:
 22a:	cf 93       	push	r28
 22c:	c8 2f       	mov	r28, r24
 22e:	18 98       	cbi	0x03, 0	; 3
 230:	84 e8       	ldi	r24, 0x84	; 132
 232:	86 bf       	out	0x36, r24	; 54
 234:	06 b6       	in	r0, 0x36	; 54
 236:	07 fe       	sbrs	r0, 7
 238:	fd cf       	rjmp	.-6      	; 0x234 <lcd_cmd+0xa>
 23a:	83 b1       	in	r24, 0x03	; 3
 23c:	8f 70       	andi	r24, 0x0F	; 15
 23e:	83 b9       	out	0x03, r24	; 3
 240:	84 e8       	ldi	r24, 0x84	; 132
 242:	86 bf       	out	0x36, r24	; 54
 244:	06 b6       	in	r0, 0x36	; 54
 246:	07 fe       	sbrs	r0, 7
 248:	fd cf       	rjmp	.-6      	; 0x244 <lcd_cmd+0x1a>
 24a:	83 b1       	in	r24, 0x03	; 3
 24c:	9c 2f       	mov	r25, r28
 24e:	90 7f       	andi	r25, 0xF0	; 240
 250:	89 2b       	or	r24, r25
 252:	83 b9       	out	0x03, r24	; 3
 254:	84 e8       	ldi	r24, 0x84	; 132
 256:	86 bf       	out	0x36, r24	; 54
 258:	06 b6       	in	r0, 0x36	; 54
 25a:	07 fe       	sbrs	r0, 7
 25c:	fd cf       	rjmp	.-6      	; 0x258 <lcd_cmd+0x2e>
 25e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <toggle>
 262:	83 b1       	in	r24, 0x03	; 3
 264:	8f 70       	andi	r24, 0x0F	; 15
 266:	83 b9       	out	0x03, r24	; 3
 268:	84 e8       	ldi	r24, 0x84	; 132
 26a:	86 bf       	out	0x36, r24	; 54
 26c:	06 b6       	in	r0, 0x36	; 54
 26e:	07 fe       	sbrs	r0, 7
 270:	fd cf       	rjmp	.-6      	; 0x26c <lcd_cmd+0x42>
 272:	23 b1       	in	r18, 0x03	; 3
 274:	30 e1       	ldi	r19, 0x10	; 16
 276:	c3 9f       	mul	r28, r19
 278:	c0 01       	movw	r24, r0
 27a:	11 24       	eor	r1, r1
 27c:	82 2b       	or	r24, r18
 27e:	83 b9       	out	0x03, r24	; 3
 280:	84 e8       	ldi	r24, 0x84	; 132
 282:	86 bf       	out	0x36, r24	; 54
 284:	06 b6       	in	r0, 0x36	; 54
 286:	07 fe       	sbrs	r0, 7
 288:	fd cf       	rjmp	.-6      	; 0x284 <lcd_cmd+0x5a>
 28a:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <toggle>
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <lcd_init>:
 292:	80 e3       	ldi	r24, 0x30	; 48
 294:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_cmd_hf>
 298:	80 e3       	ldi	r24, 0x30	; 48
 29a:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_cmd_hf>
 29e:	80 e2       	ldi	r24, 0x20	; 32
 2a0:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <lcd_cmd_hf>
 2a4:	88 e2       	ldi	r24, 0x28	; 40
 2a6:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
 2aa:	8c e0       	ldi	r24, 0x0C	; 12
 2ac:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
 2b6:	86 e0       	ldi	r24, 0x06	; 6
 2b8:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
 2bc:	80 e8       	ldi	r24, 0x80	; 128
 2be:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
 2c2:	08 95       	ret

000002c4 <lcd_dwr>:
 2c4:	cf 93       	push	r28
 2c6:	c8 2f       	mov	r28, r24
 2c8:	18 9a       	sbi	0x03, 0	; 3
 2ca:	84 e8       	ldi	r24, 0x84	; 132
 2cc:	86 bf       	out	0x36, r24	; 54
 2ce:	06 b6       	in	r0, 0x36	; 54
 2d0:	07 fe       	sbrs	r0, 7
 2d2:	fd cf       	rjmp	.-6      	; 0x2ce <lcd_dwr+0xa>
 2d4:	83 b1       	in	r24, 0x03	; 3
 2d6:	8f 70       	andi	r24, 0x0F	; 15
 2d8:	83 b9       	out	0x03, r24	; 3
 2da:	84 e8       	ldi	r24, 0x84	; 132
 2dc:	86 bf       	out	0x36, r24	; 54
 2de:	06 b6       	in	r0, 0x36	; 54
 2e0:	07 fe       	sbrs	r0, 7
 2e2:	fd cf       	rjmp	.-6      	; 0x2de <lcd_dwr+0x1a>
 2e4:	83 b1       	in	r24, 0x03	; 3
 2e6:	9c 2f       	mov	r25, r28
 2e8:	90 7f       	andi	r25, 0xF0	; 240
 2ea:	89 2b       	or	r24, r25
 2ec:	83 b9       	out	0x03, r24	; 3
 2ee:	84 e8       	ldi	r24, 0x84	; 132
 2f0:	86 bf       	out	0x36, r24	; 54
 2f2:	06 b6       	in	r0, 0x36	; 54
 2f4:	07 fe       	sbrs	r0, 7
 2f6:	fd cf       	rjmp	.-6      	; 0x2f2 <lcd_dwr+0x2e>
 2f8:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <toggle>
 2fc:	83 b1       	in	r24, 0x03	; 3
 2fe:	8f 70       	andi	r24, 0x0F	; 15
 300:	83 b9       	out	0x03, r24	; 3
 302:	84 e8       	ldi	r24, 0x84	; 132
 304:	86 bf       	out	0x36, r24	; 54
 306:	06 b6       	in	r0, 0x36	; 54
 308:	07 fe       	sbrs	r0, 7
 30a:	fd cf       	rjmp	.-6      	; 0x306 <lcd_dwr+0x42>
 30c:	23 b1       	in	r18, 0x03	; 3
 30e:	30 e1       	ldi	r19, 0x10	; 16
 310:	c3 9f       	mul	r28, r19
 312:	c0 01       	movw	r24, r0
 314:	11 24       	eor	r1, r1
 316:	82 2b       	or	r24, r18
 318:	83 b9       	out	0x03, r24	; 3
 31a:	84 e8       	ldi	r24, 0x84	; 132
 31c:	86 bf       	out	0x36, r24	; 54
 31e:	06 b6       	in	r0, 0x36	; 54
 320:	07 fe       	sbrs	r0, 7
 322:	fd cf       	rjmp	.-6      	; 0x31e <lcd_dwr+0x5a>
 324:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <toggle>
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <lcd_msg>:
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	ec 01       	movw	r28, r24
 332:	88 81       	ld	r24, Y
 334:	88 23       	and	r24, r24
 336:	31 f0       	breq	.+12     	; 0x344 <lcd_msg+0x18>
 338:	21 96       	adiw	r28, 0x01	; 1
 33a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <lcd_dwr>
 33e:	89 91       	ld	r24, Y+
 340:	81 11       	cpse	r24, r1
 342:	fb cf       	rjmp	.-10     	; 0x33a <lcd_msg+0xe>
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	08 95       	ret

0000034a <reading>:
}


void reading(void)
{
	lcd_cmd(0x01);					/*clear */
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_cmd(0x80);
 350:	80 e8       	ldi	r24, 0x80	; 128
 352:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("Temperature = ");
 356:	80 e6       	ldi	r24, 0x60	; 96
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_cmd(0xC0);
 35e:	80 ec       	ldi	r24, 0xC0	; 192
 360:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("Humidity = ");
 364:	8f e6       	ldi	r24, 0x6F	; 111
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
 36c:	08 95       	ret

0000036e <result>:



void result(void)					/*result function*/
{
	lcd_cmd(0x01);				/*clear*/
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_cmd(0x80);				/*move cursor to the beginning of the first line */
 374:	80 e8       	ldi	r24, 0x80	; 128
 376:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("Rack Started");
 37a:	8b e7       	ldi	r24, 0x7B	; 123
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_cmd(0xC0);
 382:	80 ec       	ldi	r24, 0xC0	; 192
 384:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("Time Ends :");
 388:	88 e8       	ldi	r24, 0x88	; 136
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_msg(HourSt);
 390:	85 ef       	ldi	r24, 0xF5	; 245
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_msg("H");
 398:	84 e9       	ldi	r24, 0x94	; 148
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3a0:	2f ef       	ldi	r18, 0xFF	; 255
 3a2:	85 ea       	ldi	r24, 0xA5	; 165
 3a4:	9e e0       	ldi	r25, 0x0E	; 14
 3a6:	21 50       	subi	r18, 0x01	; 1
 3a8:	80 40       	sbci	r24, 0x00	; 0
 3aa:	90 40       	sbci	r25, 0x00	; 0
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <result+0x38>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <result+0x42>
 3b0:	00 00       	nop
	_delay_ms(300);
	reading();
 3b2:	0e 94 a5 01 	call	0x34a	; 0x34a <reading>
 3b6:	08 95       	ret

000003b8 <main_menu>:
}


void main_menu(void)
{
	lcd_cmd(0x01);
 3b8:	81 e0       	ldi	r24, 0x01	; 1
 3ba:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("  Select Mode");
 3be:	86 e9       	ldi	r24, 0x96	; 150
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_cmd(0xC0);
 3c6:	80 ec       	ldi	r24, 0xC0	; 192
 3c8:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("1.Auto  2.Manual");
 3cc:	84 ea       	ldi	r24, 0xA4	; 164
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
 3d4:	2f ef       	ldi	r18, 0xFF	; 255
 3d6:	81 ee       	ldi	r24, 0xE1	; 225
 3d8:	94 e0       	ldi	r25, 0x04	; 4
 3da:	21 50       	subi	r18, 0x01	; 1
 3dc:	80 40       	sbci	r24, 0x00	; 0
 3de:	90 40       	sbci	r25, 0x00	; 0
 3e0:	e1 f7       	brne	.-8      	; 0x3da <main_menu+0x22>
 3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <main_menu+0x2c>
 3e4:	00 00       	nop
 3e6:	08 95       	ret

000003e8 <start>:
void reading(void);		/*define function in the programme */

char HourSt[4];

void start()
{
 3e8:	6f 92       	push	r6
 3ea:	7f 92       	push	r7
 3ec:	8f 92       	push	r8
 3ee:	9f 92       	push	r9
 3f0:	af 92       	push	r10
 3f2:	bf 92       	push	r11
 3f4:	cf 92       	push	r12
 3f6:	df 92       	push	r13
 3f8:	ef 92       	push	r14
 3fa:	ff 92       	push	r15
 3fc:	0f 93       	push	r16
 3fe:	1f 93       	push	r17
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
	i2c_init();				/* Initialization of LCD*/
 404:	0e 94 c6 00 	call	0x18c	; 0x18c <i2c_init>
	i2c_start();
 408:	0e 94 cc 00 	call	0x198	; 0x198 <i2c_start>
	i2c_write(0x70);
 40c:	80 e7       	ldi	r24, 0x70	; 112
 40e:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <i2c_write>
	lcd_init();
 412:	0e 94 49 01 	call	0x292	; 0x292 <lcd_init>
	int Hour=0;
	char data;
	
	memset(HourSt,0,4);
 416:	84 e0       	ldi	r24, 0x04	; 4
 418:	e5 ef       	ldi	r30, 0xF5	; 245
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	df 01       	movw	r26, r30
 41e:	1d 92       	st	X+, r1
 420:	8a 95       	dec	r24
 422:	e9 f7       	brne	.-6      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	
	
	lcd_cmd(0x80);					/*move cursor to the beginning of the first line */
 424:	80 e8       	ldi	r24, 0x80	; 128
 426:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("Automated Cloth");		/* Write string on 1nd line*/
 42a:	85 eb       	ldi	r24, 0xB5	; 181
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
	lcd_cmd(0xC0);					/*Go to 2nd line*/
 432:	80 ec       	ldi	r24, 0xC0	; 192
 434:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
	lcd_msg("      Rack");			/* Write string on 2nd line*/
 438:	85 ec       	ldi	r24, 0xC5	; 197
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
 440:	bf ef       	ldi	r27, 0xFF	; 255
 442:	21 ee       	ldi	r18, 0xE1	; 225
 444:	84 e0       	ldi	r24, 0x04	; 4
 446:	b1 50       	subi	r27, 0x01	; 1
 448:	20 40       	sbci	r18, 0x00	; 0
 44a:	80 40       	sbci	r24, 0x00	; 0
 44c:	e1 f7       	brne	.-8      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44e:	00 c0       	rjmp	.+0      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 450:	00 00       	nop
		int hum_value=Temp();
		if(hum_value==-1)
		lcd_msg("ERROR");
		else
		{
			itoa(hum_value,data,10);
 452:	61 2c       	mov	r6, r1
 454:	71 2c       	mov	r7, r1
	lcd_msg("Automated Cloth");		/* Write string on 1nd line*/
	lcd_cmd(0xC0);					/*Go to 2nd line*/
	lcd_msg("      Rack");			/* Write string on 2nd line*/
	_delay_ms(100);					/*delay 100 mile second*/
	loop1:							/*define loop for jump */
	main_menu();					/*call main menu function*/
 456:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <main_menu>
	while(!(Status(PIND,PIND0)|Status(PIND,PIND1)|Status(PIND,PIND2))); /*wait until button press*/
 45a:	20 b3       	in	r18, 0x10	; 16
 45c:	90 b3       	in	r25, 0x10	; 16
 45e:	80 b3       	in	r24, 0x10	; 16
 460:	96 95       	lsr	r25
 462:	91 70       	andi	r25, 0x01	; 1
 464:	c9 2f       	mov	r28, r25
 466:	90 e0       	ldi	r25, 0x00	; 0
 468:	d9 2f       	mov	r29, r25
 46a:	82 fb       	bst	r24, 2
 46c:	00 27       	eor	r16, r16
 46e:	00 f9       	bld	r16, 0
 470:	10 e0       	ldi	r17, 0x00	; 0
 472:	ce 01       	movw	r24, r28
 474:	80 2b       	or	r24, r16
 476:	91 2b       	or	r25, r17
 478:	20 fb       	bst	r18, 0
 47a:	88 24       	eor	r8, r8
 47c:	80 f8       	bld	r8, 0
 47e:	91 2c       	mov	r9, r1
 480:	88 29       	or	r24, r8
 482:	99 29       	or	r25, r9
 484:	89 2b       	or	r24, r25
 486:	49 f3       	breq	.-46     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
	
	if(Status(PIND,PIND0))			/*if  pressed button is 1 */
 488:	80 9b       	sbis	0x10, 0	; 16
 48a:	42 c0       	rjmp	.+132    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
	{
		lcd_cmd(0x01);				/*clear display*/
 48c:	81 e0       	ldi	r24, 0x01	; 1
 48e:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
		lcd_cmd(0x80);				/*move cursor to the beginning of the first line */
 492:	80 e8       	ldi	r24, 0x80	; 128
 494:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
		lcd_msg("Temperature = ");	/*display temperature*/
 498:	80 e6       	ldi	r24, 0x60	; 96
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
		
		int temp_value=Temp();
 4a0:	0e 94 7a 00 	call	0xf4	; 0xf4 <Temp>
		if(temp_value==-1)
 4a4:	8f 3f       	cpi	r24, 0xFF	; 255
 4a6:	af ef       	ldi	r26, 0xFF	; 255
 4a8:	9a 07       	cpc	r25, r26
 4aa:	29 f4       	brne	.+10     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
		lcd_msg("ERROR");
 4ac:	80 ed       	ldi	r24, 0xD0	; 208
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
 4b4:	0b c0       	rjmp	.+22     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 4b6:	4a e0       	ldi	r20, 0x0A	; 10
 4b8:	b3 01       	movw	r22, r6
 4ba:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__itoa_ncheck>
		else
		{
			itoa(temp_value,data,10);
			lcd_msg(data);
 4be:	c3 01       	movw	r24, r6
 4c0:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			lcd_msg("C");
 4c4:	86 ed       	ldi	r24, 0xD6	; 214
 4c6:	90 e0       	ldi	r25, 0x00	; 0
 4c8:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
		}
		
		
		lcd_cmd(0xC0);				/*2nd line*/
 4cc:	80 ec       	ldi	r24, 0xC0	; 192
 4ce:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
		lcd_msg("Humidity = ");		/*display humidity*/
 4d2:	8f e6       	ldi	r24, 0x6F	; 111
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
		
		int hum_value=Temp();
 4da:	0e 94 7a 00 	call	0xf4	; 0xf4 <Temp>
		if(hum_value==-1)
 4de:	8f 3f       	cpi	r24, 0xFF	; 255
 4e0:	bf ef       	ldi	r27, 0xFF	; 255
 4e2:	9b 07       	cpc	r25, r27
 4e4:	29 f4       	brne	.+10     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
		lcd_msg("ERROR");
 4e6:	80 ed       	ldi	r24, 0xD0	; 208
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
 4ee:	0b c0       	rjmp	.+22     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4f0:	4a e0       	ldi	r20, 0x0A	; 10
 4f2:	b3 01       	movw	r22, r6
 4f4:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__itoa_ncheck>
		else
		{
			itoa(hum_value,data,10);
			lcd_msg(data);
 4f8:	c3 01       	movw	r24, r6
 4fa:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			lcd_msg("%");
 4fe:	88 ed       	ldi	r24, 0xD8	; 216
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
		}
		
		
		while(!(Status(PIND,PIND2)));	/*wait until 3rd button press*/
 506:	82 9b       	sbis	0x10, 2	; 16
 508:	fe cf       	rjmp	.-4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
		{
			if(Status(PIND,PIND2))
 50a:	82 99       	sbic	0x10, 2	; 16
 50c:	a4 cf       	rjmp	.-184    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 50e:	4a c0       	rjmp	.+148    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				goto loop1;				/*if 3rd button press goto main menu*/
			}
			
		}
	}
	else if(Status(PIND,PIND1))			/*go to manual mode pressing button 2 in main menu*/
 510:	81 9b       	sbis	0x10, 1	; 16
 512:	46 c0       	rjmp	.+140    	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 514:	c0 e0       	ldi	r28, 0x00	; 0
 516:	d0 e0       	ldi	r29, 0x00	; 0
	{
		while(1)
		{
			while(!(Status(PIND,PIND0)|Status(PIND,PIND1)|Status(PIND,PIND2))); /*wait pressing increment and decrement key*/
 518:	20 b3       	in	r18, 0x10	; 16
 51a:	90 b3       	in	r25, 0x10	; 16
 51c:	80 b3       	in	r24, 0x10	; 16
 51e:	91 fb       	bst	r25, 1
 520:	ee 24       	eor	r14, r14
 522:	e0 f8       	bld	r14, 0
 524:	f1 2c       	mov	r15, r1
 526:	82 fb       	bst	r24, 2
 528:	cc 24       	eor	r12, r12
 52a:	c0 f8       	bld	r12, 0
 52c:	d1 2c       	mov	r13, r1
 52e:	c7 01       	movw	r24, r14
 530:	8c 29       	or	r24, r12
 532:	9d 29       	or	r25, r13
 534:	20 fb       	bst	r18, 0
 536:	aa 24       	eor	r10, r10
 538:	a0 f8       	bld	r10, 0
 53a:	b1 2c       	mov	r11, r1
 53c:	8a 29       	or	r24, r10
 53e:	9b 29       	or	r25, r11
 540:	89 2b       	or	r24, r25
 542:	51 f3       	breq	.-44     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
			{
				
				if(Status(PIND,PIND0))
 544:	80 9b       	sbis	0x10, 0	; 16
 546:	02 c0       	rjmp	.+4      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
				{
					Hour++;					/*if press increment key increment hour one by one*/
 548:	21 96       	adiw	r28, 0x01	; 1
 54a:	06 c0       	rjmp	.+12     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
				}
				else if(Status(PIND,PIND1))
 54c:	81 9b       	sbis	0x10, 1	; 16
 54e:	04 c0       	rjmp	.+8      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 550:	21 97       	sbiw	r28, 0x01	; 1
 552:	12 f4       	brpl	.+4      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 554:	c0 e0       	ldi	r28, 0x00	; 0
 556:	d0 e0       	ldi	r29, 0x00	; 0
 558:	4a e0       	ldi	r20, 0x0A	; 10
 55a:	65 ef       	ldi	r22, 0xF5	; 245
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	ce 01       	movw	r24, r28
 560:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__itoa_ncheck>
						Hour=0;			/*hours can't decrease less than 0 */
					}
				}
			}
			itoa(Hour,HourSt,10);
			lcd_cmd(0x01);				/*clear display*/
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
			lcd_cmd(0x80);				/*move cursor to the beginning of the first line */
 56a:	80 e8       	ldi	r24, 0x80	; 128
 56c:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
			lcd_msg("Set Work Time");	/*display string*/
 570:	8a ed       	ldi	r24, 0xDA	; 218
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			lcd_cmd(0xC0);				/*2nd line*/
 578:	80 ec       	ldi	r24, 0xC0	; 192
 57a:	0e 94 15 01 	call	0x22a	; 0x22a <lcd_cmd>
			lcd_msg("      ");
 57e:	8b ee       	ldi	r24, 0xEB	; 235
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			lcd_msg(HourSt);
 586:	85 ef       	ldi	r24, 0xF5	; 245
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			lcd_msg("H        ");
 58e:	88 ee       	ldi	r24, 0xE8	; 232
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 94 96 01 	call	0x32c	; 0x32c <lcd_msg>
			
			if(Status(PIND,PIND2))
 596:	82 9b       	sbis	0x10, 2	; 16
 598:	bf cf       	rjmp	.-130    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
			{
				result();				/*if press 3rd button ,break */
 59a:	0e 94 b7 01 	call	0x36e	; 0x36e <result>
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
				break;
			}
			
		}
	}
	else if (Status(PIND,PIND2))
 5a0:	82 99       	sbic	0x10, 2	; 16
 5a2:	59 cf       	rjmp	.-334    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
	{
		goto loop1;						/*go to main menu*/
	}
}
 5a4:	df 91       	pop	r29
 5a6:	cf 91       	pop	r28
 5a8:	1f 91       	pop	r17
 5aa:	0f 91       	pop	r16
 5ac:	ff 90       	pop	r15
 5ae:	ef 90       	pop	r14
 5b0:	df 90       	pop	r13
 5b2:	cf 90       	pop	r12
 5b4:	bf 90       	pop	r11
 5b6:	af 90       	pop	r10
 5b8:	9f 90       	pop	r9
 5ba:	8f 90       	pop	r8
 5bc:	7f 90       	pop	r7
 5be:	6f 90       	pop	r6
 5c0:	08 95       	ret

000005c2 <main>:
#include "lcd_display.h"


int main(void)
{
	start();
 5c2:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <start>
	//moving some distance
	//stopping
	
	int left_light=light_value_left(),right_light=light_value_right();
 5c6:	0e 94 b8 00 	call	0x170	; 0x170 <light_value_left>

000005ca <__itoa_ncheck>:
 5ca:	bb 27       	eor	r27, r27
 5cc:	4a 30       	cpi	r20, 0x0A	; 10
 5ce:	31 f4       	brne	.+12     	; 0x5dc <__itoa_ncheck+0x12>
 5d0:	99 23       	and	r25, r25
 5d2:	22 f4       	brpl	.+8      	; 0x5dc <__itoa_ncheck+0x12>
 5d4:	bd e2       	ldi	r27, 0x2D	; 45
 5d6:	90 95       	com	r25
 5d8:	81 95       	neg	r24
 5da:	9f 4f       	sbci	r25, 0xFF	; 255
 5dc:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__utoa_common>

000005e0 <__utoa_ncheck>:
 5e0:	bb 27       	eor	r27, r27

000005e2 <__utoa_common>:
 5e2:	fb 01       	movw	r30, r22
 5e4:	55 27       	eor	r21, r21
 5e6:	aa 27       	eor	r26, r26
 5e8:	88 0f       	add	r24, r24
 5ea:	99 1f       	adc	r25, r25
 5ec:	aa 1f       	adc	r26, r26
 5ee:	a4 17       	cp	r26, r20
 5f0:	10 f0       	brcs	.+4      	; 0x5f6 <__utoa_common+0x14>
 5f2:	a4 1b       	sub	r26, r20
 5f4:	83 95       	inc	r24
 5f6:	50 51       	subi	r21, 0x10	; 16
 5f8:	b9 f7       	brne	.-18     	; 0x5e8 <__utoa_common+0x6>
 5fa:	a0 5d       	subi	r26, 0xD0	; 208
 5fc:	aa 33       	cpi	r26, 0x3A	; 58
 5fe:	08 f0       	brcs	.+2      	; 0x602 <__utoa_common+0x20>
 600:	a9 5d       	subi	r26, 0xD9	; 217
 602:	a1 93       	st	Z+, r26
 604:	00 97       	sbiw	r24, 0x00	; 0
 606:	79 f7       	brne	.-34     	; 0x5e6 <__utoa_common+0x4>
 608:	b1 11       	cpse	r27, r1
 60a:	b1 93       	st	Z+, r27
 60c:	11 92       	st	Z+, r1
 60e:	cb 01       	movw	r24, r22
 610:	0c 94 0a 03 	jmp	0x614	; 0x614 <strrev>

00000614 <strrev>:
 614:	dc 01       	movw	r26, r24
 616:	fc 01       	movw	r30, r24
 618:	67 2f       	mov	r22, r23
 61a:	71 91       	ld	r23, Z+
 61c:	77 23       	and	r23, r23
 61e:	e1 f7       	brne	.-8      	; 0x618 <strrev+0x4>
 620:	32 97       	sbiw	r30, 0x02	; 2
 622:	04 c0       	rjmp	.+8      	; 0x62c <strrev+0x18>
 624:	7c 91       	ld	r23, X
 626:	6d 93       	st	X+, r22
 628:	70 83       	st	Z, r23
 62a:	62 91       	ld	r22, -Z
 62c:	ae 17       	cp	r26, r30
 62e:	bf 07       	cpc	r27, r31
 630:	c8 f3       	brcs	.-14     	; 0x624 <strrev+0x10>
 632:	08 95       	ret

00000634 <_exit>:
 634:	f8 94       	cli

00000636 <__stop_program>:
 636:	ff cf       	rjmp	.-2      	; 0x636 <__stop_program>
